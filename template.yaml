AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Digital Identity serverless frontend firebreak ðŸ”¥"

Resources:
  FirebreakApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      BinaryMediaTypes: ['*/*']

  FirebreakServerlessFrontend:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambdas/versionOne
      Handler: app.handler
      Runtime: nodejs16.x
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref FirebreakApiGatewayApi
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref FirebreakApiGatewayApi
            Path: /{proxy+}
            Method: ANY
      Policies:
        - AWSLambdaBasicExecutionRole
      # Role: !GetAtt FirebreakLambdaIamRole.Arn

  # lambdaApiGatewayInvoke:
  #   Type: "AWS::Lambda::Permission"
  #   Properties:
  #     Action: "lambda:InvokeFunction"
  #     FunctionName: !GetAtt "FirebreakServerlessFrontend.Arn"
  #     Principal: "apigateway.amazonaws.com"
  #     SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${FirebreakApiGatewayApi}/*/*/*"

  # FirebreakLambdaIamRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: 'Allow'
  #           Principal:
  #             Service:
  #               - 'lambda.amazonaws.com'
  #           Action:
  #             - 'sts:AssumeRole'
  #     Path: '/'
  #     Policies:
  #       - PolicyDocument:
  #           PolicyName: "lambda"
  #           Version: "2012-10-17"
  #           Statement:
  #             - Action:
  #                 - "logs:CreateLogGroup"
  #                 - "logs:CreateLogStream"
  #                 - "logs:PutLogEvents"
  #               Effect: "Allow"
  #               Resource:
  #                 - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FirebreakServerlessFrontend}:*"

  FirebreakServerlessFrontendLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${FirebreakServerlessFrontend}"
      RetentionInDays: 30


Outputs:
  ServerlessUrl:
    Description: Url to invoke the serverless Frontend
    Value: !Sub https://${FirebreakApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/